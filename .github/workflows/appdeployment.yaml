name: Build and Deploy to sample app

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-central-1
      ECR_REPO: 966127383941.dkr.ecr.eu-central-1.amazonaws.com/sample-app
      HELM_RELEASE: my-nginx-app
      HELM_CHART_PATH: ./nginx-app
      NAMESPACE: default

    steps:
      # Step 1: Checkout Code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Configure AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 3: Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Step 4: Build Docker Image
      - name: Build Docker image
        run: |
          IMAGE_TAG=${{ github.run_number }}
          docker build -t $ECR_REPO:$IMAGE_TAG .

      # Step 5: Push Docker Image
        run: |
          IMAGE_TAG=${{ github.run_number }}
          docker push $ECR_REPO:$IMAGE_TAG

      # Step 6: Setup Helm
      - name: Install Helm
        uses: azure/setup-helm@v4

      # Step 7: Deploy / Upgrade Helm Release
      - name: Deploy with Helm
        run: |
          IMAGE_TAG=${{ github.run_number }}
          helm upgrade --install $HELM_RELEASE $HELM_CHART_PATH \
            --namespace $NAMESPACE \
            --set image.repository=$ECR_REPO \
            --set image.tag=$IMAGE_TAG \
            --create-namespace
